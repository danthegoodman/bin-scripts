#!/usr/bin/env bash

read -r -d '' LIST_ALL_FILTER <<'EOF'
{
  project: input_filename | split("/")[-2],
  deps: ({} + .dependencies + .devDependencies)
    | to_entries
    | sort_by(.key)
    | map(.value = (
      .value
      | if startswith("^") then .[:(index("."))] else . end
      ))
    | from_entries
}
EOF

list_all() {
  jq "$LIST_ALL_FILTER" ~/vix/*/*/package.json
}

list_one() {
  list_all | jq -s --arg dep "$1" '
    map(
      select(.deps[$dep])
      | {key: .project, value: .deps[$dep]}
    )
    | sort_by(.key)
    | from_entries'
}

mismatch(){
  list_all | jq -s '
    map(
      .project as $p
      | .deps
      | to_entries
      | map({key,value:{key:.value, value:$p}})
      | .[]
    )
    | sort_by(.key)
    | group_by(.key)
    | map (
      {
        key: .[0].key,
        value: (
          map(.value)
          | group_by(.key)
          | select( length > 1)
          | map(
            {
              key: .[0].key,
              value:(
                map(.value)
                | sort
                | join(", ")
              )
            }
          )
          | from_entries
        )
      }
    )
    | from_entries
  '
  return

  read -r -d '' MISMATCH_FILTER <<'EOF'
  map( .deps | to_entries | .[] )
    | sort_by(.key)
    | group_by(.key)
    | map(
        {
          key: .[0].key,
          value: (map(.value) | sort | unique)
        }
        | select( (.value|length) > 1 )
      )
    | from_entries
EOF
  list_all | jq -s "$MISMATCH_FILTER"
}

if [[ "$1" == "--help" ]]; then
  echo "vix-deps [options]"
  echo "List dependencies for vix projects."
  echo
  echo "Modes:"
  echo "  vix-deps"
  echo "    List all dependencies for all projects"
  echo
  echo "  vix-deps [name]"
  echo "    list all projects with given dependency"
  echo
  echo "  vix-deps --mismatch"
  echo "    list all dependencies that do not match across all projects"
elif [[ "$1" == "--mismatch" ]]; then
  mismatch
elif [[ -n "$1" ]]; then
  list_one "$1"
else
  list_all
fi
